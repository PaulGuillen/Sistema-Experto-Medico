package interfaces_graficas;

import diagnosticos.*;
import enferm_y_sintomas.Sintomas_Enfermedades;
import javax.swing.JTextField;

/*
Creado por DISC: ALejandro Huapaya Sánchez
 */
public class DiagnosticarApp extends javax.swing.JFrame {

   Diagnosticar D=new Diagnosticar();
   String Enf[]=new String[50];
   String Sintoma[]=new String[50];
   float subTot[]=new float[50];
   int NS=0,NE=0;
   Sintomas_Enfermedades SE=new Sintomas_Enfermedades();
   public DiagnosticarApp() {
      initComponents();
      reinicio();
      setLocationRelativeTo(null);
      setLayout(null);
      SE.cargaSelSin(sintomas,2);
   }
   void reinicio(){
      for(int i=0;i<50;i++){
         subTot[i]=0; Enf[i]="";Sintoma[i]="";
      }
      NS=0;NE=0;
      salida.setText("");
   }
   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   private void initComponents() {//GEN-BEGIN:initComponents

      sintomas = new javax.swing.JComboBox<>();
      jLabel1 = new javax.swing.JLabel();
      btnIngresar = new javax.swing.JButton();
      jScrollPane1 = new javax.swing.JScrollPane();
      salida = new javax.swing.JTextArea();
      jLabel2 = new javax.swing.JLabel();
      dni = new javax.swing.JTextField();
      paciente = new javax.swing.JTextField();
      btnGrabar = new javax.swing.JButton();
      btnDiag = new javax.swing.JButton();
      btnReinicio = new javax.swing.JButton();
      btnQuitar = new javax.swing.JButton();
      btnExporta = new javax.swing.JButton();

      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

      sintomas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elija sintoma" }));

      jLabel1.setText("Posibles enfermedades");

      btnIngresar.setText("Ingresar al diagnóstico");
      btnIngresar.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnIngresarActionPerformed(evt);
         }
      });

      salida.setEditable(false);
      salida.setColumns(20);
      salida.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
      salida.setRows(5);
      jScrollPane1.setViewportView(salida);

      jLabel2.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
      jLabel2.setForeground(new java.awt.Color(204, 0, 0));
      jLabel2.setText("Ingrese el DNI... luego pulse ENTER");

      dni.addKeyListener(new java.awt.event.KeyAdapter() {
         public void keyPressed(java.awt.event.KeyEvent evt) {
            dniKeyPressed(evt);
         }
      });

      paciente.setEditable(false);
      paciente.setBackground(new java.awt.Color(255, 255, 0));

      btnGrabar.setText("Grabar en Historia");

      btnDiag.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
      btnDiag.setText("DIAGNOSTICAR");
      btnDiag.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnDiagActionPerformed(evt);
         }
      });

      btnReinicio.setText("Reiniciar");
      btnReinicio.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnReinicioActionPerformed(evt);
         }
      });

      btnQuitar.setText("Quitar sintoma");
      btnQuitar.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnQuitarActionPerformed(evt);
         }
      });

      btnExporta.setText("Exporta a Word");
      btnExporta.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnExportaActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(jScrollPane1))
               .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dni, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                     .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                           .addGroup(layout.createSequentialGroup()
                              .addComponent(btnIngresar)
                              .addGap(18, 18, 18)
                              .addComponent(btnReinicio)
                              .addGap(26, 26, 26)
                              .addComponent(btnDiag))
                           .addComponent(sintomas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                           .addComponent(paciente, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)))
                     .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(btnExporta)
                        .addGap(33, 33, 33)
                        .addComponent(btnGrabar))
                     .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnQuitar)))
                  .addGap(0, 54, Short.MAX_VALUE)))
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jLabel2)
               .addComponent(dni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(paciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(sintomas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(4, 4, 4)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(btnIngresar)
               .addComponent(btnDiag)
               .addComponent(btnReinicio))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jLabel1)
               .addComponent(btnQuitar))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(4, 4, 4)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(btnGrabar)
               .addComponent(btnExporta))
            .addContainerGap())
      );

      pack();
   }//GEN-END:initComponents

   private void dniKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dniKeyPressed
      if(evt.getExtendedKeyCode() == 10){
         if(!D.errorDNI(dni)){
            personas.pacientes.Pacientitos PP=new personas.pacientes.Pacientitos();
            int pos=PP.hallarDNI(dni);
            if(pos<0)D.mensaje("ERBD:\nNo Existe DNI");
            else{
               paciente.setText(PP.PA[pos].apeNom);
            }
         }
      }
   }//GEN-LAST:event_dniKeyPressed
   int damePosSin(){
      String sint=sintomas.getSelectedItem().toString();
      int pos=-1;
      for(int i=0; i<NS; i++){
         if(Sintoma[i].equals(sint)){
            pos=i; break;
         }
      }
      return pos;
   }
   int damePosEnf(String E){
      int pos=-1;
      for(int i=0; i<NE; i++){
         if(Enf[i].equals(E)){
            pos=i; break;
         }
      }
      return pos;
   }
   String datoRepo(String a, String b){
      String dat="\n"+a+" - "+b+" ";
      int lar=dat.length();
      for(int i=0;i<50-lar; i++)dat+=".";
      return dat;
   }
   private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
      String sint=sintomas.getSelectedItem().toString(); 
      JTextField SS=new JTextField(); SS.setText(sint);
      int cual=SE.buscarSin(SS);
      float porc=(int)(1f/Float.valueOf(SE.S[cual].dato(3))*10000);
      if(damePosSin()<0){
         Sintoma[NS]=sint;
         for (int i = 0; i < SE.N3; i++) {
            if (SE.SE[i].nom.compareTo(sint) == 0) {
               if(damePosEnf(SE.SE[i].cod)<0){
                  Enf[NE]=SE.SE[i].cod;NE++;
               }
               subTot[NE-1]+=porc;
               salida.append(datoRepo(sint, SE.SE[i].cod) + porc/100 + "%");
            }
         }
         NS++;
      }else{
         SE.mensaje("ERIO:\nSintoma ya ingresado!!!");
      }
      
   }//GEN-LAST:event_btnIngresarActionPerformed

   private void btnReinicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReinicioActionPerformed
      reinicio();
   }//GEN-LAST:event_btnReinicioActionPerformed
   String repoEnf(String a){
      String x="\n - "+a;
      int lar=x.length();
      for(int i=0;i<50-lar;i++)x+=".";
      return x+" ";
   }
   private void btnDiagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiagActionPerformed
      salida.setText("Analisis de Sintomas: Posibles enfermedades");
      float total=0;
      for(int i=0;i<NE-1;i++){
         for(int j=i;j<NE;j++){
            if(subTot[i]<subTot[j]){
               float aux=subTot[i];subTot[i]=subTot[j];subTot[j]=aux;
               String S=Enf[i];Enf[i]=Enf[j];Enf[j]=S;
            }
         }
      }
      for(int i=0;i<NE;i++)total+=subTot[i];
      for(int i=0;i<NE;i++){
         float porc=(int)(subTot[i]/total*10000);
         salida.append(repoEnf(Enf[i])+porc/100+"%");
      }
   }//GEN-LAST:event_btnDiagActionPerformed

   private void btnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarActionPerformed
      String sint=sintomas.getSelectedItem().toString();
      int pos=damePosSin();
      if(pos<1){
         SE.mensaje("ErIO:\n   "+sint+"\nNo se ingresó al diagnostico");
      }else{
         NS--;
         salida.setText("");
         for(int i=pos; i<NS;i++)Sintoma[i]=Sintoma[i+1];
         JTextField SS = new JTextField();
         for(int i=0; i<NE; i++){
            Enf[i]="";subTot[i]=0;
         }
         NE=0;
         for(int ii=0; ii<NS; ii++){
            sint=Sintoma[ii];
            SS.setText(sint);
            int cual = SE.buscarSin(SS);
            
            float porc=(int)(1.f/Float.valueOf(SE.S[cual].dato(3))*10000);
            for (int i = 0; i < SE.N3; i++) {
               if (SE.SE[i].nom.compareTo(sint) == 0) {
                  if (damePosEnf(SE.SE[i].cod) < 0) {
                     Enf[NE] = SE.SE[i].cod;
                     NE++;
                  }
                  subTot[NE - 1] += porc;
                  salida.append(datoRepo(sint, SE.SE[i].cod) + porc / 100 + "%");
               }
            }
            
         }
      }
   }//GEN-LAST:event_btnQuitarActionPerformed

   private void btnExportaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportaActionPerformed
      if(dni.getText().isEmpty()){
         SE.mensaje("ERIO:\n  No ha ingresado DNI");
      }else{
         D.Exporta(paciente.getText(), salida);
      }
   }//GEN-LAST:event_btnExportaActionPerformed

   public static void main(String args[]) {
      /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
      /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(DiagnosticarApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(DiagnosticarApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(DiagnosticarApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(DiagnosticarApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>
      //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            new DiagnosticarApp().setVisible(true);
         }
      });
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton btnDiag;
   private javax.swing.JButton btnExporta;
   private javax.swing.JButton btnGrabar;
   private javax.swing.JButton btnIngresar;
   private javax.swing.JButton btnQuitar;
   private javax.swing.JButton btnReinicio;
   private javax.swing.JTextField dni;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JTextField paciente;
   private javax.swing.JTextArea salida;
   private javax.swing.JComboBox<String> sintomas;
   // End of variables declaration//GEN-END:variables
}
